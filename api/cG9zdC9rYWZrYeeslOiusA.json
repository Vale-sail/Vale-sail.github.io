{"title":"kafka笔记","date":"2021-11-29T03:42:00.000Z","author":"Vale Sail","slug":"kafka笔记","tags":["kafka","消息队列"],"categories":["学习笔记"],"updated":"2021-12-01T08:51:41.769Z","content":"<h3 id=\"术语释义\">术语释义<a href=\"post/kafka笔记#术语释义\"></a></h3><p>消息</p>\n<blockquote>\n<p>二进制编码，kafka的主要处理对象</p>\n</blockquote>\n<p>主题</p>\n<blockquote>\n<p>topic，承载消息的逻辑体，主要是用于区分具体业务</p>\n</blockquote>\n<p>分区</p>\n<blockquote>\n<p>partition 一个有序不变的消息序列；<br>一个topic可以拥有多个partition，业务消息层面上支持高可用</p>\n</blockquote>\n<p>消息位移: offset，分区中每条消息的位置信息</p>\n<p>副本</p>\n<blockquote>\n<p>kafka每个分区拷贝到多个备份，提供数据冗余备份，<br>副本分为领导者副本和追求者副本，为分区提供高可用<br>ISR: 同步的副本 OSR: 未同步副本</p>\n</blockquote>\n<p>生产者：向主题发送消息</p>\n<p>消费者：从主题订阅消息的应用程序</p>\n<p>消费者位移：每一个消费者消费的位置 消费者租</p>\n<blockquote>\n<p>多个消费者组成一个组，同时消费一个主题的多个分区实现高吞吐</p>\n</blockquote>\n<p>重平衡</p>\n<blockquote>\n<p>消费者组内某个消费者实例挂掉以后，重新分配组内其他消费者消费</p>\n</blockquote>\n<h3 id=\"生产者ACK\">生产者ACK<a href=\"post/kafka笔记#生产者ACK\"></a></h3><h4 id=\"ack-为-0\">ack 为 0<a href=\"post/kafka笔记#ack-为-0\"></a></h4><p>消息发送到broker，回复ack。</p>\n<blockquote>\n<p>此时消息可能还没写入磁盘</p>\n</blockquote>\n<h4 id=\"ack-为-1\">ack 为 1<a href=\"post/kafka笔记#ack-为-1\"></a></h4><p>消息发送到broker，并且leader写入将消息落盘，回复ack。</p>\n<blockquote>\n<p>此时消息可能还有同步给其他的副本</p>\n</blockquote>\n<h4 id=\"ack为-1-或all\">ack为 -1 或all<a href=\"post/kafka笔记#ack为-1-或all\"></a></h4><p>消息发送到broker，且leader将消息落盘，1个(all:所有ISR)的follower将消息同步，恢复ack</p>\n<blockquote>\n<p>如果follower长时间没有同步完成<br>引入ISR和OSR副本，长时间没有同步完成的副本放入OSR副本<br>如果ISR只有leader一个相当于ack为1。但是可以使用min.insync.replicas来指定最少同步的副本</p>\n</blockquote>\n<h3 id=\"消息消费\">消息消费<a href=\"post/kafka笔记#消息消费\"></a></h3><h4 id=\"重复消费配置项\">重复消费配置项<a href=\"post/kafka笔记#重复消费配置项\"></a></h4><h5 id=\"自动提交\">自动提交<a href=\"post/kafka笔记#自动提交\"></a></h5><ul>\n<li>enable.auto.commit：表示消费者会周期性自动提交消费的offset。默认值true。</li>\n<li>auto.commit.interval.ms：在enable.auto.commit为true的情况下， 自动提交的间隔。默认值5秒。</li>\n</ul>\n<h5 id=\"消费配置\">消费配置<a href=\"post/kafka笔记#消费配置\"></a></h5><ul>\n<li>max.poll.records：单次消费者拉取的最大数据条数，默认值500。</li>\n<li>max.poll.interval.ms：表示若在阈值时间之内消费者没有消费完上一次poll的消息，consumer<br>client会主动向coordinator发起LeaveGroup请求，触发Rebalance；然后consumer重新发送JoinGroup请求。</li>\n</ul>\n<h5 id=\"消费者连接\">消费者连接<a href=\"post/kafka笔记#消费者连接\"></a></h5><ul>\n<li>session.timeout.ms：group<br>Coordinator检测consumer发生崩溃所需的时间。在这个时间内如果Coordinator未收到Consumer的任何消息，那Coordinator就认为Consumer挂了。默认值10秒。</li>\n<li>heartbeat.interval.ms：标识Consumer给Coordinator发一个心跳包的时间间隔。heartbeat.interval.ms越小，发的心跳包越多。默认值3秒。</li>\n</ul>\n","prev":{"title":"MQTT笔记","slug":"mqtt"},"next":{"title":"笔记","slug":"笔记"},"link":"https://vale-sail.github.io/post/kafka笔记/"}